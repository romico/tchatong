version: "3.3"
services:
  # frontend:
  #   image: node:17-alpine3.12
  #   container_name: frontend
  #   working_dir: /frontend
  #   volumes:
  #     - ./app/frontend:/frontend
  #   ports:
  #     - "80:80"
  #   entrypoint: >
  #     sh -c "npm ci
  #     && npm run dev"
  # backend:
  #   image: node:17-alpine3.12
  #   container_name: backend
  #   working_dir: /backend
  #   volumes:
  #     - ./app/backend:/backend
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - docker.env
  #   entrypoint: >
  #     sh -c "npm ci
  #     && npm run start:dev"
  crawler:
    container_name: crawler
    build:
      context: ./app/crawler
      dockerfile: Dockerfile
    env_file:
      - docker.env
    volumes:
      - ./app/crawler:/crawler
    working_dir: /crawler
    entrypoint: >
      sh -c "make re && ./twicyrc"
    depends_on:
      - db
  db:
    container_name: db
    build:
      context: ./app/db
      dockerfile: Dockerfile
    volumes:
      - ./app/db/data:/var/lib/mysql
    ports:
      - 4406:3306
    working_dir: /
    env_file:
      - docker.env
    entrypoint: >
      sh -c "./dbconfig/mysqld.sh"
# sh -c "while true; do sleep 1; done;"
  analyzer:
    container_name: analyzer
    build:
      context: ./app/analyzer
      dockerfile: Dockerfile
    volumes:
      - ./app/analyzer:/analyzer
    working_dir: /analyzer/srcs
    env_file:
      - docker.env
    entrypoint: >
      sh -c "python3 main.py"
    depends_on:
      - db
# while true; do sleep 1; done;
