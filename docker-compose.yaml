version: "3.3"
services:
  frontend:
    container_name: frontend
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    working_dir: /frontend
    volumes:
      - ./app/frontend:/frontend
    ports:
      - "4000:4000"
    entrypoint: >
      sh -c "./entrypoint.sh"
  backend:
    container_name: backend
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    working_dir: /backend
    volumes:
      - ./app/backend:/backend
    ports:
      - "3000:3000"
    env_file:
      - docker.env
    entrypoint: >
      sh -c "./entrypoint.sh"
  crawler:
    container_name: crawler
    build:
      context: ./app/crawler
      dockerfile: Dockerfile
    env_file:
      - docker.env
    volumes:
      - ./app/crawler:/crawler
    working_dir: /crawler
    entrypoint: >
      sh -c "make re && ./twicyrc"
  db:
    container_name: db
    build:
      context: ./app/db
      dockerfile: Dockerfile
    volumes:
      - ./app/db/data:/var/lib/mysql
    ports:
      - 4406:3306
    working_dir: /
    env_file:
      - docker.env
    entrypoint: >
      sh -c "./dbconfig/mysqld.sh"
  analyzer:
    container_name: analyzer
    build:
      context: ./app/analyzer
      dockerfile: Dockerfile
    volumes:
      - ./app/analyzer:/analyzer
    working_dir: /analyzer/srcs
    env_file:
      - docker.env
    entrypoint: >
      sh -c "python3 -u main.py"
  proxy:
    container_name: proxy
    build:
      context: ./app/proxy
      dockerfile: Dockerfile
    volumes:
      - ./app/proxy:/proxy
    ports:
      - 80:80
    working_dir: /proxy
    entrypoint: >
      sh -c 'nginx -g "daemon off;"'
# while true; do sleep 1; done;
